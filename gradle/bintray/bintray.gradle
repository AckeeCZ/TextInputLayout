apply plugin: 'com.jfrog.bintray'

version = libProperties['VERSION_NAME']

if (project.hasProperty("android")) { // Android libraries
    task sourcesJar(type: Jar) {
        classifier = 'sources'
        from android.sourceSets.main.java.srcDirs
    }
} else { // Java libraries
    task sourcesJar(type: Jar, dependsOn: classes) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }
}

artifacts {
    archives sourcesJar
}


// Bintray
Properties properties = new Properties()
def bintrayUser
def bintrayApiKey
if (project.rootProject.file('local.properties').exists()) {
    properties.load(project.rootProject.file('local.properties').newDataInputStream())
    bintrayUser = properties.getProperty("bintray.user")
    bintrayApiKey = properties.getProperty("bintray.apikey")
} else {
    bintrayUser = bintrayUser = System.getenv("bintrayUsername")
    bintrayApiKey = bintrayApiKey = System.getenv("bintrayApiKey")
}

bintray {
    user = bintrayUser
    key = bintrayApiKey

    configurations = ['archives']
    pkg {
        name = bintrayName
        repo = libProperties['BINTRAY_REPO']
        userOrg = libProperties['BINTRAY_ORGANISATION']
        desc = libraryDescription
        websiteUrl = libProperties['SITE_URL']
        vcsUrl = libProperties['GIT_URL']
        licenses = ["Apache-2.0"]
        publish = true
        publicDownloadNumbers = true
        version {
            desc = libraryDescription
            name = libProperties['VERSION_NAME']
            released = new Date()

            gpg {
                sign = true // Determines whether to GPG sign the files. The default is false
                // passphrase = properties.getProperty("bintray.gpg.password")
                // Optional. The passphrase for GPG signing'
            }
        }
    }
}